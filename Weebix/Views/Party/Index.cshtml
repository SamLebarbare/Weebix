
@{
    ViewBag.Title = "Party";
}
@section headscript
{
    <script src="/Scripts/jquery.signalR-1.0.1.min.js" type="text/javascript"></script>
    <script src="/signalr/hubs" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {

            function PartyViewModel() {

                this.partyHub = $.connection.partyHub;
                var partyHub = this.partyHub;
                var self = this;
                var notify = true;
                var playerId = null;
                var playerIdNotSet = true;
                this.isPartyMaker = ko.observable(false);
                this.isGameStarted = ko.observable(false);
                this.choosedTheme = "";
                this.choosedCard = null;
                this.players = ko.observable();
                this.theme = ko.observable();
                this.cardIsSelected = ko.observable(false);
                this.themeIsSelected = ko.observable(false);
                this.myTurn = ko.observable(false);


                this.cardSlot1 = ko.observable("/Content/images/slot.png");
                this.cardSlot2 = ko.observable("/Content/images/slot.png");
                this.cardSlot3 = ko.observable("/Content/images/slot.png");
                this.themeCardSlot = ko.observable("/Content/images/slot.png");

                //give a model access for hub callbacks
                var players = this.players;
                var theme = this.theme;
                var themeIsSelected = this.themeIsSelected;
                var cardIsSelected = this.cardIsSelected;
                var isPartyMaker = this.isPartyMaker;
                var myTurn = this.myTurn;
                var isGameStarted = this.isGameStarted;
                var slot1 = this.cardSlot1;
                var slot2 = this.cardSlot2;
                var slot3 = this.cardSlot3;
                var slotT = this.themeCardSlot;

                this.readyToStart = ko.computed(function () {
                    if (Number(this.players()) <= 2)
                    {
                        return false;
                    }
                    else
                    {
                        return true;
                    }
                    
                }, this);

                //Initializes the view model
                this.init = function () {
                    this.partyHub.server.getPlayers(@ViewBag.partyId);
                };

                //Handlers for our Hub callbacks

                this.partyHub.client.setPlayers = function (pId,nb) {
                    if(pId == @ViewBag.partyId)
                    {
                        if(playerIdNotSet)
                        {
                            playerId = nb;
                            playerIdNotSet = false;
                        }    
                        if (nb == 1&&isPartyMaker()==false) 
                        {
                            isPartyMaker(true);
                            myTurn(true);
                        }
                        players(nb);
                    }
                    
                };

                this.partyHub.client.setTheme = function (pId,t) {
                    if(pId == @ViewBag.partyId)
                    {
                        theme(t);
                        themeIsSelected(true);
                    }
                };

                this.partyHub.client.startGame = function (pId) {
                    if(pId == @ViewBag.partyId)
                    {
                        isGameStarted(true);
                        
                        
                    }
                };

                this.partyHub.client.giveCards = function (pId,cards) {
                    if(pId == @ViewBag.partyId)
                    {
                        slot1(cards[0].path);
                        slot2(cards[1].path);
                        slot3(cards[2].path);
                        myTurn(false);
                    }
                };

                this.partyHub.client.ChangePlayer = function (pId,nextPlayerId) {
                    if(pId == @ViewBag.partyId)
                    {
                        if(nextPlayerId == playerId)
                        {
                            myTurn(true);
                        }
                    }
                };    
                this.partyHub.client.goToLobby = function (pId) {
                    if(pId == @ViewBag.partyId)
                    {
                        window.location.href = "/lobby/";
                    }

                    
                };

        //View Model 'Commands'
                this.start = function () {
                    this.partyHub.server.startGame( @ViewBag.partyId);

                };

                this.getCards = function () {
                    this.partyHub.server.getCards( @ViewBag.partyId,playerId);

                };

                this.propose = function () {

                    this.partyHub.server.proposeTheme( @ViewBag.partyId ,this.choosedTheme);

                };

                this.leave = function () {
                    
                    this.partyHub.server.leaveParty(@ViewBag.partyId);

                    if (isPartyMaker()) {
                        
                        this.partyHub.server.flushParty(@ViewBag.partyId);
                    }

                };

                this.chooseThe1 = function () {
                    
                    slotT(slot1());

                };
                this.chooseThe2 = function () {
                    
                    slotT(slot2());

                };
                this.chooseThe3 = function () {
                    
                    slotT(slot3());

                };
            }//end party view model

          

            $.connection.hub.logging = true;
            
            var vm = new PartyViewModel();
            ko.applyBindings(vm);
            // Start the connection
            $.connection.hub.start(function () { vm.init(); });

        });


    </script>
}
<div class="hero-unit">
      <div>
        <h1>@ViewBag.name party</h1>
        <p data-bind="text: players"></p><p> player(s)</p>
        
        <div data-bind="visible : !isGameStarted()">
             <a class="btn btn-danger btn-large" href="#" data-bind="click: leave">Leave Party</a>
             <a class="btn btn-inverse btn-large" href="#" data-bind="visible : !readyToStart()">Need more player to start</a>
             <div data-bind="visible : isPartyMaker">
                <a class="btn btn-success btn-large" href="#" data-bind="click : start, visible : readyToStart()">Start Game!</a>
             </div>
         </div>
    </div>
     <div data-bind="visible : themeIsSelected()">
        <h2>My Card:</h2>
        <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: themeCardSlot() } " />
     </div>
</div>

     

 

    <div class="container" data-bind="visible : isGameStarted()">

        <div data-bind="visible : !themeIsSelected()">
            <div data-bind="visible : myTurn()">
                <a class="btn btn-success btn-large" href="#" data-bind="click : getCards">Card please!</a>
            </div>
             
             <div class="row">
                <div class="span4">
                <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: cardSlot1() } " />
                </div>
                <div class="span4">
                    <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: cardSlot2() } " />
                </div>
                <div class="span4">
                    <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: cardSlot3() } " />
                </div>
            </div>
            <div class="control-group">
                <label for="textinput1">Theme proposal</label>
                <input type="text" data-bind="value: choosedTheme" />
                <a class="btn" href="#" data-bind="click: propose">Propose theme</a>
            </div>
        </div>

    

      
      <div data-bind="visible : themeIsSelected()">
          <h3>
            Choose a card for the theme:
          </h3>
          <h2 data-bind="text: theme"></h2>   
          <div class="row">
            <div class="span4">
                <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: cardSlot1() },click : chooseThe1 " />
            </div>
            <div class="span4">
                <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: cardSlot2() },click : chooseThe2 " />
            </div>
            <div class="span4">
                <img src="" width="145" height="200" class="img-polaroid" data-bind="attr: { src: cardSlot3() },click : chooseThe3 " />
            </div>
          </div>
            
                
        </div>
        
      </div>
      
